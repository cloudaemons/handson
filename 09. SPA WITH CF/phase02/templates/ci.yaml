AWSTemplateFormatVersion: 2010-09-09
Description: Continuous Integration for static website

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General configuration
        Parameters:
          - ProjectName
      - Label:
          default: Environemnt configuration
        Parameters:
          - Environment
          - RepositoryName
          - RepositoryBranchName

Parameters:
  ProjectName:
    Type: String
    Description: The name of the project being built.  This name will be used on a number of resources.
    Default: workshop-website
  RepositoryName:
    Type: String
    Description: Repository name.
    Default: workshop-website

  RepositoryBranchName:
    Type: String
    Description: Repository branch to build off of.
    Default: develop
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
      - test


Resources:
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              #Cloudfront does not support resource-level permissions. For this reason only '*' is used
              #https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html
              - Resource: "*"
                Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                  - arn:aws:s3:::workshop*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:GetObjectVersion

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: arn:aws:logs:*:*:*
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
              - Resource: "*"
                Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
              - Resource: !GetAtt CodeBuildProject.Arn
                Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:StopBuild
              - Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectName}*
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ValidateTemplate
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${ProjectName}*
                Effect: Allow
                Action:
                  - iam:PassRole
  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub buildspec-${Environment}.yaml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:2.0
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-${Environment}
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeCommit
              OutputArtifacts:
                - Name: SourceCodeOutputArtifact
              Configuration:
                PollForSourceChanges: true
                BranchName: !Ref RepositoryBranchName
                RepositoryName: !Ref RepositoryName
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub ${ProjectName}-${Environment}
                RoleArn: !GetAtt CloudFormationServiceRole.Arn
                Capabilities: CAPABILITY_IAM
                StackName: !Sub ${ProjectName}-${Environment}
                TemplatePath: SourceCodeOutputArtifact::templates/distribution.yaml
              RunOrder: 1
            - Name: Execute
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                StackName: !Sub ${ProjectName}-${Environment}
                ActionMode: CHANGE_SET_EXECUTE
                OutputFileName: Distribution.json
                ChangeSetName: !Sub ${ProjectName}-${Environment}
              OutputArtifacts:
                - Name: DistributionOutputArtifact
              RunOrder: 2
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
                PrimarySource: SourceCodeOutputArtifact
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
                - Name: DistributionOutputArtifact
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/*
                Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:ListChangeSets
              - Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:PutLogEvents
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${ProjectName}-${Environment}*
                Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:DeleteRolePolicy
                  - iam:DetachRolePolicy
                  - iam:GetRole
                  - iam:PassRole
                  - iam:PutRolePolicy
              #Cloudfront does not support resource-level permissions. For this reason only '*' is used
              #https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html
              - Resource: "*"
                Effect: Allow
                Action:
                  - cloudfront:*
              - Resource: arn:aws:s3:::*
                Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:PutBucketPolicy
                  - s3:DeleteBucketPolicy
                  - s3:GetBucketPolicy
                  - s3:GetBucketPolicyStatus
              
